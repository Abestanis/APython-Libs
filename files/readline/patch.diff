diff --git Readline.new/android.c Readline.new/android.c
new file mode 100644
--- /dev/null
+++ Readline.new/android.c
@@ -0,0 +1,20 @@
+#include <unistd.h>
+#include <stdio.h>
+#include "android.h"
+#include "ipc.h"
+#include "readline.h"
+#include "rlprivate.h"
+
+static int androidFd = -1;
+
+void rl_android_start_rl_mode() {
+    if (androidFd >= 0) { close(androidFd); }
+    androidFd = openConnection("readLineAndroid");
+    if (androidFd >= 0) {
+        write(androidFd, rl_display_prompt, (size_t) (rl_visible_prompt_length + 1));
+    }
+}
+
+void rl_android_end_rl_mode() {
+    if (androidFd >= 0) { close(androidFd); }
+}
diff --git Readline.new/android.h Readline.new/android.h
new file mode 100644
--- /dev/null
+++ Readline.new/android.h
@@ -0,0 +1,15 @@
+#ifndef _ANDROID_H_
+#define _ANDROID_H_
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void rl_android_start_rl_mode();
+void rl_android_end_rl_mode();
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* _ANDROID_H_ */
diff --git readline.orig/callback.c Readline.new/callback.c
--- readline.orig/callback.c
+++ Readline.new/callback.c
@@ -37,6 +37,10 @@
 #  include "ansi_stdlib.h"
 #endif
 
+#ifdef __ANDROID__
+#  include "android.h"
+#endif /* __ANDROID__ */
+
 #include <stdio.h>
 
 /* System-specific feature definitions and include files. */
@@ -108,6 +112,9 @@ rl_callback_handler_install (prompt, linefunc)
      rl_vcpfunc_t *linefunc;
 {
   rl_set_prompt (prompt);
+#ifdef __ANDROID__
+    rl_android_start_rl_mode();
+#endif
   RL_SETSTATE (RL_STATE_CALLBACK);
   rl_linefunc = linefunc;
   _rl_callback_newline ();
@@ -279,6 +286,10 @@ rl_callback_read_char ()
 #if defined (HANDLE_SIGNALS)
 	  rl_clear_signals ();
 #endif
+#ifdef __ANDROID__
+      rl_android_end_rl_mode();
+#endif
+      
 	  in_handler = 0;
 	  (*rl_linefunc) (line);
 
@@ -288,8 +299,12 @@ rl_callback_read_char ()
 
 	  /* Redisplay the prompt if readline_handler_{install,remove}
 	     not called. */
-	  if (in_handler == 0 && rl_linefunc)
-	    _rl_callback_newline ();
+	  if (in_handler == 0 && rl_linefunc) {
+#ifdef __ANDROID__
+        rl_android_start_rl_mode();
+#endif
+        _rl_callback_newline ();
+      }
 	}
     }
   while (rl_pending_input || _rl_pushed_input_available () || RL_ISSTATE (RL_STATE_MACROINPUT));
diff --git Readline.new/config.h Readline.new/config.h
new file mode 100644
--- /dev/null
+++ Readline.new/config.h
@@ -0,0 +1,300 @@
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Maintained by hand. */
+
+/* Template definitions for autoconf */
+#define __EXTENSIONS__ 1
+#define _ALL_SOURCE 1
+#define _GNU_SOURCE 1
+/* #undef _POSIX_SOURCE */
+/* #undef _POSIX_1_SOURCE */
+#define _POSIX_PTHREAD_SEMANTICS 1
+#define _TANDEM_SOURCE 1
+/* #undef _MINIX */
+
+/* Define NO_MULTIBYTE_SUPPORT to not compile in support for multibyte
+   characters, even if the OS supports them. */
+/* #undef NO_MULTIBYTE_SUPPORT */
+
+/* #undef _FILE_OFFSET_BITS */
+
+/* Define as the return type of signal handlers (int or void).  */
+#define RETSIGTYPE void
+
+#define VOID_SIGHANDLER 1
+
+/* Characteristics of the compiler. */
+/* #undef sig_atomic_t */
+
+/* #undef size_t */
+
+/* #undef ssize_t */
+
+/* #undef const */
+
+/* #undef volatile */
+
+#define PROTOTYPES 1
+#define __PROTOTYPES 1
+
+/* #undef __CHAR_UNSIGNED__ */
+
+/* Define if the `S_IS*' macros in <sys/stat.h> do not work properly.  */
+/* #undef STAT_MACROS_BROKEN */
+
+/* Define if you have the chown function. */
+#define HAVE_CHOWN 1
+
+/* Define if you have the fcntl function. */
+#define HAVE_FCNTL 1
+
+/* Define if you have the getpwent function. */
+/* #undef HAVE_GETPWENT */
+
+/* Define if you have the getpwnam function. */
+#define HAVE_GETPWNAM 1
+
+/* Define if you have the getpwuid function. */
+#define HAVE_GETPWUID 1
+
+/* Define if you have the isascii function. */
+#define HAVE_ISASCII 1
+
+/* Define if you have the iswctype function.  */
+#define HAVE_ISWCTYPE 1
+
+/* Define if you have the iswlower function.  */
+#define HAVE_ISWLOWER 1
+
+/* Define if you have the iswupper function.  */
+#define HAVE_ISWUPPER 1
+
+/* Define if you have the isxdigit function. */
+#define HAVE_ISXDIGIT 1
+
+/* Define if you have the kill function. */
+#define HAVE_KILL 1
+
+/* Define if you have the lstat function. */
+#define HAVE_LSTAT 1
+
+/* Define if you have the mbrlen function. */
+#define HAVE_MBRLEN 1
+
+/* Define if you have the mbrtowc function. */
+#define HAVE_MBRTOWC 1
+
+/* Define if you have the mbsrtowcs function. */
+#define HAVE_MBSRTOWCS 1
+
+/* Define if you have the memmove function. */
+#define HAVE_MEMMOVE 1
+
+/* Define if you have the pselect function.  */
+#define HAVE_PSELECT 1
+
+/* Define if you have the putenv function.  */
+#define HAVE_PUTENV 1
+
+/* Define if you have the readlink function.  */
+#define HAVE_READLINK 1
+
+/* Define if you have the select function.  */
+#define HAVE_SELECT 1
+
+/* Define if you have the setenv function.  */
+#define HAVE_SETENV 1
+
+/* Define if you have the setlocale function. */
+#define HAVE_SETLOCALE 1
+
+/* Define if you have the strcasecmp function.  */
+#define HAVE_STRCASECMP 1
+
+/* Define if you have the strcoll function.  */
+#define HAVE_STRCOLL 1
+
+/* #undef STRCOLL_BROKEN */
+
+/* Define if you have the strpbrk function.  */
+#define HAVE_STRPBRK 1
+
+/* Define if you have the tcgetattr function.  */
+#define HAVE_TCGETATTR 1
+
+/* Define if you have the towlower function.  */
+#define HAVE_TOWLOWER 1
+
+/* Define if you have the towupper function.  */
+#define HAVE_TOWUPPER 1
+
+/* Define if you have the vsnprintf function.  */
+#define HAVE_VSNPRINTF 1
+
+/* Define if you have the wcrtomb function.  */
+#define HAVE_WCRTOMB 1
+
+/* Define if you have the wcscoll function.  */
+#define HAVE_WCSCOLL 1
+
+/* Define if you have the wctype function.  */
+#define HAVE_WCTYPE 1
+
+/* Define if you have the wcwidth function.  */
+#define HAVE_WCWIDTH 1
+
+/* and whether it works */
+/* #undef WCWIDTH_BROKEN */
+
+#define STDC_HEADERS 1
+
+/* Define if you have the <dirent.h> header file.  */
+#define HAVE_DIRENT_H 1
+
+/* Define if you have the <fcntl.h> header file.  */
+#define HAVE_FCNTL_H 1
+
+/* Define if you have the <langinfo.h> header file.  */
+#define HAVE_LANGINFO_H 1
+
+/* Define if you have the <libaudit.h> header file.  */
+/* #undef HAVE_LIBAUDIT_H */
+
+/* Define if you have the <limits.h> header file.  */
+#define HAVE_LIMITS_H 1
+
+/* Define if you have the <locale.h> header file.  */
+#define HAVE_LOCALE_H 1
+
+/* Define if you have the <memory.h> header file.  */
+#define HAVE_MEMORY_H 1
+
+/* Define if you have the <ndir.h> header file.  */
+#define HAVE_NDIR_H 1
+
+/* Define if you have the <ncurses/termcap.h> header file.  */
+#define HAVE_NCURSES_TERMCAP_H 1
+
+/* Define if you have the <pwd.h> header file.  */
+#define HAVE_PWD_H 1
+
+/* Define if you have the <stdarg.h> header file.  */
+#define HAVE_STDARG_H 1
+
+/* Define if you have the <stdbool.h> header file.  */
+#define HAVE_STDBOOL_H 1
+
+/* Define if you have the <stdlib.h> header file.  */
+#define HAVE_STDLIB_H 1
+
+/* Define if you have the <string.h> header file.  */
+#define HAVE_STRING_H 1
+
+/* Define if you have the <strings.h> header file.  */
+#define HAVE_STRINGS_H 1
+
+/* Define if you have the <sys/dir.h> header file.  */
+#define HAVE_SYS_DIR_H 1
+
+/* Define if you have the <sys/file.h> header file.  */
+#define HAVE_SYS_FILE_H 1
+
+/* Define if you have the <sys/ioctl.h> header file.  */
+#define HAVE_SYS_IOCTL_H 1
+
+/* Define if you have the <sys/ndir.h> header file.  */
+#define HAVE_SYS_NDIR_H 1
+
+/* Define if you have the <sys/pte.h> header file.  */
+#define HAVE_SYS_PTE_H 1
+
+/* Define if you have the <sys/ptem.h> header file.  */
+#define HAVE_SYS_PTEM_H 1
+
+/* Define if you have the <sys/select.h> header file.  */
+#define HAVE_SYS_SELECT_H 1
+
+/* Define if you have the <sys/stream.h> header file.  */
+#define HAVE_SYS_STREAM_H 1
+
+/* Define if you have the <termcap.h> header file.  */
+/* #undef HAVE_TERMCAP_H */
+
+/* Define if you have the <termio.h> header file.  */
+#define HAVE_TERMIO_H 1
+
+/* Define if you have the <termios.h> header file.  */
+#define HAVE_TERMIOS_H 1
+
+/* Define if you have the <unistd.h> header file.  */
+#define HAVE_UNISTD_H 1
+
+/* Define if you have the <varargs.h> header file.  */
+#define HAVE_VARARGS_H 1
+
+/* Define if you have the <wchar.h> header file.  */
+#define HAVE_WCHAR_H 1
+
+/* Define if you have the <wctype.h> header file.  */
+#define HAVE_WCTYPE_H 1
+
+#define HAVE_MBSTATE_T 1
+
+/* Define if you have wchar_t in <wctype.h>. */
+#define HAVE_WCHAR_T 1
+
+/* Define if you have wctype_t in <wctype.h>. */
+#define HAVE_WCTYPE_T 1
+
+/* Define if you have wint_t in <wctype.h>. */  
+#define HAVE_WINT_T 1
+
+/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */
+/* #undef HAVE_LANGINFO_CODESET */
+
+/* Define if you have <linux/audit.h> and it defines AUDIT_USER_TTY */
+/* #undef HAVE_DECL_AUDIT_USER_TTY */
+
+/* Definitions pulled in from aclocal.m4. */
+#define VOID_SIGHANDLER 1
+
+#define GWINSZ_IN_SYS_IOCTL 1
+
+#define STRUCT_WINSIZE_IN_SYS_IOCTL 1
+
+/* #undef STRUCT_WINSIZE_IN_TERMIOS */
+
+/* #undef TIOCSTAT_IN_SYS_IOCTL */
+
+#define FIONREAD_IN_SYS_IOCTL 1
+
+/* #undef SPEED_T_IN_SYS_TYPES */
+
+#define HAVE_GETPW_DECLS 1
+
+#define HAVE_STRUCT_DIRENT_D_INO 1
+
+#define HAVE_STRUCT_DIRENT_D_FILENO 1
+
+/* #undef HAVE_STRUCT_DIRENT_D_NAMLEN */
+
+/* #undef HAVE_BSD_SIGNALS */
+
+#define HAVE_POSIX_SIGNALS 1
+
+/* #undef HAVE_USG_SIGHOLD */
+
+#define MUST_REINSTALL_SIGHANDLERS 1
+
+#define HAVE_POSIX_SIGSETJMP 1
+
+/* #undef CTYPE_NON_ASCII */
+
+/* modify settings or make new ones based on what autoconf tells us. */
+
+/* Ultrix botches type-ahead when switching from canonical to
+   non-canonical mode, at least through version 4.3 */
+#if !defined (HAVE_TERMIOS_H) || !defined (HAVE_TCGETATTR) || defined (ultrix)
+#  define TERMIOS_MISSING
+#endif
+
+/* VARARGS defines moved to rlstdc.h */
diff --git readline.orig/readline.c Readline.new/readline.c
--- readline.orig/readline.c
+++ Readline.new/readline.c
@@ -64,6 +64,10 @@ extern int errno;
 #  include <os2.h>
 #endif /* __EMX__ */
 
+#ifdef __ANDROID__
+#  include "android.h"
+#endif /* __ANDROID__ */
+
 /* Some standard library routines. */
 #include "readline.h"
 #include "history.h"
@@ -365,6 +369,10 @@ readline (prompt)
 
   rl_set_prompt (prompt);
 
+#ifdef __ANDROID__
+    rl_android_start_rl_mode();
+#endif
+
   rl_initialize ();
   if (rl_prep_term_function)
     (*rl_prep_term_function) (_rl_meta_flag);
@@ -391,6 +399,10 @@ readline (prompt)
     _rl_audit_tty (value);
 #endif
 
+#ifdef __ANDROID__
+  rl_android_end_rl_mode();
+#endif
+
   return (value);
 }
 
diff --git readline.orig/rlconf.h Readline.new/rlconf.h
--- readline.orig/rlconf.h
+++ Readline.new/rlconf.h
@@ -43,7 +43,7 @@
 #define DEFAULT_INPUTRC "~/.inputrc"
 
 /* The ultimate last-ditch filenname for an init file -- system-wide. */
-#define SYS_INPUTRC "/etc/inputrc"
+#define SYS_INPUTRC "/system/etc/inputrc"
 
 /* If defined, expand tabs to spaces. */
 #define DISPLAY_TABS
@@ -60,7 +60,7 @@
 #define READLINE_CALLBACKS
 
 /* Define this if you want the cursor to indicate insert or overwrite mode. */
-/* #define CURSOR_MODE */
+#define CURSOR_MODE
 
 /* Define this if you want to enable code that talks to the Linux kernel
    tty auditing system. */
