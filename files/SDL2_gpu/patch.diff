diff --git SDL2_gpu.orig/Android.mk SDL2_gpu.new/Android.mk
--- SDL2_gpu.orig/Android.mk
+++ SDL2_gpu.new/Android.mk
@@ -8,7 +8,10 @@ SDL_GPU_DIR := ./
 STB_IMAGE_DIR := $(SDL_GPU_DIR)/src/externals/stb_image
 STB_IMAGE_WRITE_DIR := $(SDL_GPU_DIR)/src/externals/stb_image_write
 
-LOCAL_CFLAGS := -I$(LOCAL_PATH)/../SDL/include -I$(LOCAL_PATH)/$(SDL_GPU_DIR)/include -I$(LOCAL_PATH)/$(STB_IMAGE_DIR) -I$(LOCAL_PATH)/$(STB_IMAGE_WRITE_DIR)
+LOCAL_C_INCLUDES := $(LOCAL_PATH)/include $(LOCAL_PATH)/src \
+                    $(LOCAL_PATH)/$(STB_IMAGE_DIR) \
+                    $(LOCAL_PATH)/$(STB_IMAGE_WRITE_DIR)
+LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include
 
 LOCAL_SRC_FILES := $(SDL_GPU_DIR)/src/SDL_gpu.c \
 				   $(SDL_GPU_DIR)/src/SDL_gpu_matrix.c \
@@ -21,7 +24,8 @@ LOCAL_SRC_FILES := $(SDL_GPU_DIR)/src/SDL_gpu.c \
 				   $(STB_IMAGE_WRITE_DIR)/stb_image_write.c
 
 
-LOCAL_CFLAGS += -DSDL_GPU_DISABLE_OPENGL -DSDL_GPU_USE_BUFFER_RESET -DSTBI_FAILURE_USERMSG -O3
+LOCAL_CFLAGS += -DSDL_GPU_DISABLE_OPENGL -DSDL_GPU_USE_BUFFER_RESET -DSTBI_FAILURE_USERMSG -O3 \
+                -DGL_GLEXT_PROTOTYPES -DSDL_GPU_DYNAMIC_GLES_3
 
 LOCAL_LDLIBS += -llog -lGLESv1_CM
 LOCAL_LDLIBS += -lGLESv2
diff --git SDL2_gpu.orig/src/SDL_gpu.c SDL2_gpu.new/src/SDL_gpu.c
--- SDL2_gpu.orig/src/SDL_gpu.c
+++ SDL2_gpu.new/src/SDL_gpu.c
@@ -422,8 +422,13 @@ GPU_Target* GPU_Init(Uint16 w, Uint16 h, GPU_WindowFlagEnum SDL_flags)
     for(i = 0; i < renderer_order_size; i++)
     {
         GPU_Target* screen = GPU_InitRendererByID(renderer_order[i], w, h, SDL_flags);
-        if(screen != NULL)
+        if(screen != NULL) {
             return screen;
+        } else {
+            // If we cant initialize this renderer, ignore the errors and try the next one.
+            (void) GPU_PopErrorCode();
+            (void) GPU_PopErrorCode();
+        }
     }
 
     GPU_PushErrorCode("GPU_Init", GPU_ERROR_BACKEND_ERROR, "No renderer out of %d was able to initialize properly", renderer_order_size);
diff --git SDL2_gpu.orig/src/SDL_gpu_renderer.c SDL2_gpu.new/src/SDL_gpu_renderer.c
--- SDL2_gpu.orig/src/SDL_gpu_renderer.c
+++ SDL2_gpu.new/src/SDL_gpu_renderer.c
@@ -381,6 +381,7 @@ void GPU_GetDefaultRendererOrder(int* order_size, GPU_RendererID* order)
 
 GPU_Renderer* GPU_CreateRenderer(GPU_RendererID id)
 {
+	GPU_LogInfo("Creating renderer %s\n", id.name);
 	GPU_Renderer* result = NULL;
 	int i;
 	for(i = 0; i < GPU_MAX_REGISTERED_RENDERERS; i++)
