diff --git Pixman.new/pixman/config.h Pixman.new/pixman/config.h
new file mode 100644
index 0000000..498768a
--- /dev/null
+++ Pixman.new/pixman/config.h
@@ -0,0 +1,197 @@
+/* config.h  */
+
+/* Define if building universal (internal helper macro) */
+#undef AC_APPLE_UNIVERSAL_BUILD
+
+/* Whether we have alarm() */
+#define HAVE_ALARM 1
+
+/* Whether the compiler supports __builtin_clz */
+#define HAVE_BUILTIN_CLZ 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Whether we have FE_DIVBYZERO */
+#define HAVE_FEDIVBYZERO 1
+
+/* Whether we have feenableexcept() */
+#define HAVE_FEENABLEEXCEPT 1
+
+/* Define to 1 if we have <fenv.h> */
+#define HAVE_FENV_H 1
+
+/* Whether the tool chain supports __float128 */
+#define HAVE_FLOAT128 1
+
+/* Whether the compiler supports GCC vector extensions */
+#define HAVE_GCC_VECTOR_EXTENSIONS 1
+
+/* Define to 1 if you have the `getisax' function. */
+#undef HAVE_GETISAX
+
+/* Whether we have getpagesize() */
+#define HAVE_GETPAGESIZE 1
+
+/* Whether we have gettimeofday() */
+#define HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `pixman-1' library (-lpixman-1). */
+#undef HAVE_LIBPIXMAN_1
+
+/* Whether we have libpng */
+#undef HAVE_LIBPNG
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Whether we have mmap() */
+#define HAVE_MMAP 1
+
+/* Whether we have mprotect() */
+#define HAVE_MPROTECT 1
+
+/* Whether we have posix_memalign() */
+#define HAVE_POSIX_MEMALIGN 1
+
+/* Whether pthreads is supported */
+#define HAVE_PTHREADS 1
+
+/* Whether we have sigaction() */
+#define HAVE_SIGACTION 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if we have <sys/mman.h> */
+#define HAVE_SYS_MMAN_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to the sub-directory where libtool stores uninstalled libraries. */
+#define LT_OBJDIR "/"
+
+/* Name of package */
+#define PACKAGE "pixman"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "http://lists.freedesktop.org/mailman/listinfo/pixman"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "libpixman"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "libpixman.0.34.0"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL "http://cairographics.org/releases/pixman-0.32.8.tar.gz"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "0.34.0"
+
+/* enable TIMER_BEGIN/TIMER_END macros */
+#if TARGET_ARCH == __X86__
+#  define PIXMAN_TIMERS 1
+#endif
+
+/* The size of `long', as computed by sizeof. */
+#define SIZEOF_LONG __sizeof_long__
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* The compiler supported TLS storage class */
+#undef TLS
+
+/* Whether the tool chain supports __attribute__((constructor)) */
+#define TOOLCHAIN_SUPPORTS_ATTRIBUTE_CONSTRUCTOR 1
+
+/* use ARM IWMMXT compiler intrinsics */
+#undef USE_ARM_IWMMXT
+
+/* use ARM NEON assembly optimizations */
+#if 0//TARGET_ARCH == __ARM__
+#  define USE_ARM_NEON 1
+#else
+#  undef USE_ARM_NEON
+#endif
+/* use ARM SIMD assembly optimizations */
+#if 0//TARGET_ARCH == __ARM__
+#  define USE_ARM_SIMD 1
+#else
+#  undef USE_ARM_SIMD
+#endif
+
+/* use GNU-style inline assembler */
+#define USE_GCC_INLINE_ASM 1
+
+/* use Loongson Multimedia Instructions */
+#undef USE_LOONGSON_MMI
+
+/* use MIPS DSPr2 assembly optimizations */
+#undef USE_MIPS_DSPR2
+
+/* use OpenMP in the test suite */
+#undef USE_OPENMP
+
+/* use SSE2 compiler intrinsics */
+#undef USE_SSE2
+
+/* use SSSE3 compiler intrinsics */
+#undef USE_SSSE3
+
+/* use VMX compiler intrinsics */
+#undef USE_VMX
+
+/* use x86 MMX compiler intrinsics */
+#if TARGET_ARCH == __X86__
+#  define USE_X86_MMX 1
+#else
+#  undef USE_X86_MMX
+#endif
+
+/* Version number of package */
+#define VERSION "0.34.0"
+
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
+# endif
+#else
+# ifndef WORDS_BIGENDIAN
+#  define WORDS_BIGENDIAN
+# endif
+#endif
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+//#undef inline
+#endif
+
+/* Define to sqrt if you do not have the `sqrtf' function. */
+#undef sqrtf
diff --git pixman.orig/pixman/pixman-access.c Pixman.new/pixman/pixman-access.c
index 4f0642d..270c044 100644
--- pixman.orig/pixman/pixman-access.c
+++ Pixman.new/pixman/pixman-access.c
@@ -25,7 +25,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-arm-neon.c Pixman.new/pixman/pixman-arm-neon.c
index be761c9..06bf0bf 100644
--- pixman.orig/pixman/pixman-arm-neon.c
+++ Pixman.new/pixman/pixman-arm-neon.c
@@ -27,7 +27,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <string.h>
diff --git pixman.orig/pixman/pixman-arm-simd.c Pixman.new/pixman/pixman-arm-simd.c
index f0d1454..eeb67d7 100644
--- pixman.orig/pixman/pixman-arm-simd.c
+++ Pixman.new/pixman/pixman-arm-simd.c
@@ -24,7 +24,7 @@
  *
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-arm.c Pixman.new/pixman/pixman-arm.c
index 23374e4..6990f60 100644
--- pixman.orig/pixman/pixman-arm.c
+++ Pixman.new/pixman/pixman-arm.c
@@ -20,7 +20,7 @@
  * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-bits-image.c Pixman.new/pixman/pixman-bits-image.c
index dcdcc69..b3023d6 100644
--- pixman.orig/pixman/pixman-bits-image.c
+++ Pixman.new/pixman/pixman-bits-image.c
@@ -27,7 +27,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <stdio.h>
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-combine-float.c Pixman.new/pixman/pixman-combine-float.c
index f5145bc..cfb70ad 100644
--- pixman.orig/pixman/pixman-combine-float.c
+++ Pixman.new/pixman/pixman-combine-float.c
@@ -26,7 +26,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <math.h>
diff --git pixman.orig/pixman/pixman-combine32.c Pixman.new/pixman/pixman-combine32.c
index 4c484d3..9779620 100644
--- pixman.orig/pixman/pixman-combine32.c
+++ Pixman.new/pixman/pixman-combine32.c
@@ -22,7 +22,7 @@
  * SOFTWARE.
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <math.h>
diff --git pixman.orig/pixman/pixman-conical-gradient.c Pixman.new/pixman/pixman-conical-gradient.c
index 8bb46ae..43efd99 100644
--- pixman.orig/pixman/pixman-conical-gradient.c
+++ Pixman.new/pixman/pixman-conical-gradient.c
@@ -25,7 +25,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-edge.c Pixman.new/pixman/pixman-edge.c
index ad6dfc4..129b092 100644
--- pixman.orig/pixman/pixman-edge.c
+++ Pixman.new/pixman/pixman-edge.c
@@ -21,7 +21,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <string.h>
diff --git pixman.orig/pixman/pixman-fast-path.c Pixman.new/pixman/pixman-fast-path.c
index 53d4a1f..db614e7 100644
--- pixman.orig/pixman/pixman-fast-path.c
+++ Pixman.new/pixman/pixman-fast-path.c
@@ -24,7 +24,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <string.h>
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-filter.c Pixman.new/pixman/pixman-filter.c
index b2bf53f..676a94f 100644
--- pixman.orig/pixman/pixman-filter.c
+++ Pixman.new/pixman/pixman-filter.c
@@ -29,7 +29,7 @@
 #include <math.h>
 #include <assert.h>
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include "pixman-private.h"
 
diff --git pixman.orig/pixman/pixman-general.c Pixman.new/pixman/pixman-general.c
index 6141cb0..cf7e9db 100644
--- pixman.orig/pixman/pixman-general.c
+++ Pixman.new/pixman/pixman-general.c
@@ -26,7 +26,7 @@
  * SOFTWARE.
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <stdlib.h>
 #include <string.h>
diff --git pixman.orig/pixman/pixman-glyph.c Pixman.new/pixman/pixman-glyph.c
index 96a349a..94dbf51 100644
--- pixman.orig/pixman/pixman-glyph.c
+++ Pixman.new/pixman/pixman-glyph.c
@@ -25,7 +25,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include "pixman-private.h"
 
diff --git pixman.orig/pixman/pixman-gradient-walker.c Pixman.new/pixman/pixman-gradient-walker.c
index 822f8e6..4d6875b 100644
--- pixman.orig/pixman/pixman-gradient-walker.c
+++ Pixman.new/pixman/pixman-gradient-walker.c
@@ -24,7 +24,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include "pixman-private.h"
 
diff --git pixman.orig/pixman/pixman-image.c Pixman.new/pixman/pixman-image.c
index 1ff1a49..e094d1a 100644
--- pixman.orig/pixman/pixman-image.c
+++ Pixman.new/pixman/pixman-image.c
@@ -21,7 +21,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-implementation.c Pixman.new/pixman/pixman-implementation.c
index 2c7de4c..d22e1d7 100644
--- pixman.orig/pixman/pixman-implementation.c
+++ Pixman.new/pixman/pixman-implementation.c
@@ -22,7 +22,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <stdlib.h>
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-linear-gradient.c Pixman.new/pixman/pixman-linear-gradient.c
index 40c8c9f..d0d4acc 100644
--- pixman.orig/pixman/pixman-linear-gradient.c
+++ Pixman.new/pixman/pixman-linear-gradient.c
@@ -26,7 +26,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <stdlib.h>
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-matrix.c Pixman.new/pixman/pixman-matrix.c
index 4032c13..594626c 100644
--- pixman.orig/pixman/pixman-matrix.c
+++ Pixman.new/pixman/pixman-matrix.c
@@ -25,7 +25,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <math.h>
diff --git pixman.orig/pixman/pixman-mips-dspr2.c Pixman.new/pixman/pixman-mips-dspr2.c
index 87969ae..46363e2 100644
--- pixman.orig/pixman/pixman-mips-dspr2.c
+++ Pixman.new/pixman/pixman-mips-dspr2.c
@@ -30,7 +30,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-mips.c Pixman.new/pixman/pixman-mips.c
index 3048813..ada0d76 100644
--- pixman.orig/pixman/pixman-mips.c
+++ Pixman.new/pixman/pixman-mips.c
@@ -20,7 +20,7 @@
  * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-mmx.c Pixman.new/pixman/pixman-mmx.c
index dec3974..c5b5b87 100644
--- pixman.orig/pixman/pixman-mmx.c
+++ Pixman.new/pixman/pixman-mmx.c
@@ -30,7 +30,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #if defined USE_X86_MMX || defined USE_ARM_IWMMXT || defined USE_LOONGSON_MMI
diff --git pixman.orig/pixman/pixman-noop.c Pixman.new/pixman/pixman-noop.c
index e598904..01467fc 100644
--- pixman.orig/pixman/pixman-noop.c
+++ Pixman.new/pixman/pixman-noop.c
@@ -22,7 +22,7 @@
  * DEALINGS IN THE SOFTWARE.
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <string.h>
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-ppc.c Pixman.new/pixman/pixman-ppc.c
index a6e7bb0..bd628e3 100644
--- pixman.orig/pixman/pixman-ppc.c
+++ Pixman.new/pixman/pixman-ppc.c
@@ -20,7 +20,7 @@
  * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-radial-gradient.c Pixman.new/pixman/pixman-radial-gradient.c
index 6a21796..882a477 100644
--- pixman.orig/pixman/pixman-radial-gradient.c
+++ Pixman.new/pixman/pixman-radial-gradient.c
@@ -28,7 +28,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <stdlib.h>
 #include <math.h>
diff --git pixman.orig/pixman/pixman-region16.c Pixman.new/pixman/pixman-region16.c
index d88d338..bb65ddb 100644
--- pixman.orig/pixman/pixman-region16.c
+++ Pixman.new/pixman/pixman-region16.c
@@ -23,7 +23,7 @@
  * Author: Soren Sandmann <sandmann@redhat.com>
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #undef PIXMAN_DISABLE_DEPRECATED
diff --git pixman.orig/pixman/pixman-region32.c Pixman.new/pixman/pixman-region32.c
index abd6b1a..de4cc28 100644
--- pixman.orig/pixman/pixman-region32.c
+++ Pixman.new/pixman/pixman-region32.c
@@ -23,7 +23,7 @@
  * Author: Soren Sandmann <sandmann@redhat.com>
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman-solid-fill.c Pixman.new/pixman/pixman-solid-fill.c
index 5f9fef6..2dede87 100644
--- pixman.orig/pixman/pixman-solid-fill.c
+++ Pixman.new/pixman/pixman-solid-fill.c
@@ -22,7 +22,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include "pixman-private.h"
 
diff --git pixman.orig/pixman/pixman-sse2.c Pixman.new/pixman/pixman-sse2.c
index 8955103..db4d054 100644
--- pixman.orig/pixman/pixman-sse2.c
+++ Pixman.new/pixman/pixman-sse2.c
@@ -27,7 +27,7 @@
  * Based on work by Owen Taylor and Søren Sandmann
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 /* PSHUFD is slow on a lot of old processors, and new processors have SSSE3 */
diff --git pixman.orig/pixman/pixman-ssse3.c Pixman.new/pixman/pixman-ssse3.c
index 680d6b9..39e8f42 100644
--- pixman.orig/pixman/pixman-ssse3.c
+++ Pixman.new/pixman/pixman-ssse3.c
@@ -24,7 +24,7 @@
  * Author: Soren Sandmann (soren.sandmann@gmail.com)
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-timer.c Pixman.new/pixman/pixman-timer.c
index f5ae18e..c5100ec 100644
--- pixman.orig/pixman/pixman-timer.c
+++ Pixman.new/pixman/pixman-timer.c
@@ -20,7 +20,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-trap.c Pixman.new/pixman/pixman-trap.c
index 91766fd..548387b 100644
--- pixman.orig/pixman/pixman-trap.c
+++ Pixman.new/pixman/pixman-trap.c
@@ -22,7 +22,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include <stdio.h>
diff --git pixman.orig/pixman/pixman-utils.c Pixman.new/pixman/pixman-utils.c
index 4a3a835..26c6fbd 100644
--- pixman.orig/pixman/pixman-utils.c
+++ Pixman.new/pixman/pixman-utils.c
@@ -23,7 +23,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include <stdio.h>
 #include <stdlib.h>
diff --git pixman.orig/pixman/pixman-vmx.c Pixman.new/pixman/pixman-vmx.c
index 41efdcf..6255fb0 100644
--- pixman.orig/pixman/pixman-vmx.c
+++ Pixman.new/pixman/pixman-vmx.c
@@ -26,7 +26,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include "pixman-private.h"
 #include "pixman-combine32.h"
diff --git pixman.orig/pixman/pixman-x86.c Pixman.new/pixman/pixman-x86.c
index 05297c4..38b9f71 100644
--- pixman.orig/pixman/pixman-x86.c
+++ Pixman.new/pixman/pixman-x86.c
@@ -20,7 +20,7 @@
  * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 
 #include "pixman-private.h"
diff --git pixman.orig/pixman/pixman.c Pixman.new/pixman/pixman.c
index f932eac..bb0dbee 100644
--- pixman.orig/pixman/pixman.c
+++ Pixman.new/pixman/pixman.c
@@ -24,7 +24,7 @@
  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#include  "config.h"
 #endif
 #include "pixman-private.h"
 
diff --git pixman.orig/pixman/pixman.h Pixman.new/pixman/pixman.h
index 509ba5e..acd701b 100644
--- pixman.orig/pixman/pixman.h
+++ Pixman.new/pixman/pixman.h
@@ -69,7 +69,7 @@ SOFTWARE.
 #ifndef PIXMAN_H__
 #define PIXMAN_H__
 
-#include <pixman-version.h>
+#include "pixman-version.h"
 
 #ifdef  __cplusplus
 #define PIXMAN_BEGIN_DECLS extern "C" {
